#include <cmath>

#include "main.h"
#include "pads.h"

#include "fpga_mul_test.hpp"

/*
 ******************************************************************************
 * DEFINES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXTERNS
 ******************************************************************************
 */

/*
 ******************************************************************************
 * PROTOTYPES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * GLOBAL VARIABLES
 ******************************************************************************
 */

/*
 ******************************************************************************
 ******************************************************************************
 * LOCAL FUNCTIONS
 ******************************************************************************
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXPORTED FUNCTIONS
 ******************************************************************************
 */

/**
 *
 */
volatile fpgaword_t tmp;
void fpga_mul_test(FPGADriver *fpgap, size_t turns) {

  osalDbgCheck(fpgap->state == FPGA_READY);

  double *op1 = (double *)fpgaGetCmdSlice(fpgap, FPGA_WB_SLICE_MUL_OP1);
  double *op2 = (double *)fpgaGetCmdSlice(fpgap, FPGA_WB_SLICE_MUL_OP2);
  double *res = (double *)fpgaGetCmdSlice(fpgap, FPGA_WB_SLICE_MUL_RES);
  fpgaword_t *ctl = fpgaGetCmdSlice(fpgap, FPGA_WB_SLICE_MUL_CTL);

  while (turns--) {

    for(size_t i=0; i<32*32; i++) {
      op1[i] = i;
      op2[i] = i+1;
      res[i] = i+2;
    }

    ctl[0] = 8100;
//    while(FPGAMulRdy())
//      ;

    while (! FSMCDataFlushed())
      ;
    tmp = ctl[0];

    while(! FPGAMulRdy())
      green_led_toggle();

    tmp = res[0];
  }

  green_led_off();
  red_led_off();
  orange_led_off();
}
