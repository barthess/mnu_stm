#include <cmath>

#include "main.h"
#include "pads.h"

#include "fpga_mul_test.hpp"

/*
 ******************************************************************************
 * DEFINES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXTERNS
 ******************************************************************************
 */

/*
 ******************************************************************************
 * PROTOTYPES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * GLOBAL VARIABLES
 ******************************************************************************
 */

/*
 ******************************************************************************
 ******************************************************************************
 * LOCAL FUNCTIONS
 ******************************************************************************
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXPORTED FUNCTIONS
 ******************************************************************************
 */

/**
 *
 */
void fpga_mul_test(MtrxMul *mulp) {
  double *ptr0 = mulMtrxSlice(mulp, 0);
  double *ptr1 = mulMtrxSlice(mulp, 1);
  double *ptr2 = mulMtrxSlice(mulp, 2);

  ptr0[1023] = op0;
  ptr1[1023] = op1;

  result = op0 * op1;

  mulMtrxMultiply(mulp, 0, 1, 2, 1, 1);

  // collect result
  result = ptr2[1023];

  delta = fabs(result - (op0*op1));
  if (delta > (double)0.0001) {
    red_led_on();
    green_led_off();
  }
  else {
    green_led_on();
    red_led_off();
  }

//  wait_cycles = 0;
//  op1 += step;
//  op2 += step + (double)0.0171;
//  if (op1 > 100)
//    op1 = -100;
//  if (op2 > 100)
//    op2 = -100;
}
